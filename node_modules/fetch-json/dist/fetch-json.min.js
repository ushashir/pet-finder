//! fetch-json v2.2.7 ~ github.com/center-key/fetch-json ~ MIT License
function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}var fetch="object"===("undefined"==typeof window?"undefined":_typeof(window))&&window.fetch||require("node-fetch"),fetchJson={version:"2.2.7",request:function request(a,b,c,d){var e={method:a.toUpperCase(),credentials:"same-origin",strictErrors:!1};Object.assign(e,d);var f="GET"===e.method,g={Accept:"application/json"};!f&&c&&(g["Content-Type"]="application/json"),e.headers=Object.assign(g,d&&d.headers);var h=f&&c&&Object.keys(c);h&&h.length&&(b=b+(b.includes("?")?"&":"?")+h.map(function toPair(a){return a+"="+encodeURIComponent(c[a])}).join("&")),!f&&c&&(e.body=JSON.stringify(c));var i=b.replace(/[?].*/,""),j=i.replace(/.*:[/][/]/,"").replace(/[:/].*/,"");return fetchJson.logger&&fetchJson.logger(new Date().toISOString(),"request",e.method,j,i),fetch(b,e).then(function toJson(a){var b=a.headers.get("content-type"),c=/json|javascript/.test(b);if(fetchJson.logger&&fetchJson.logger(new Date().toISOString(),"response",e.method,j,i,a.ok,a.status,a.statusText,b),e.strictErrors&&!a.ok)throw Error("HTTP response status (\"strictErrors\" mode enabled): "+a.status);return c?a.json():a.text().then(function textToObj(c){return a.error=!a.ok,a.contentType=b,a.bodyText=c,a})})},get:function get(a,b,c){return fetchJson.request("GET",a,b,c)},post:function post(a,b,c){return fetchJson.request("POST",a,b,c)},put:function put(a,b,c){return fetchJson.request("PUT",a,b,c)},patch:function patch(a,b,c){return fetchJson.request("PATCH",a,b,c)},delete:function _delete(a,b,c){return fetchJson.request("DELETE",a,b,c)},logger:null,getLogHeaders:function getLogHeaders(){return["Timestamp","HTTP","Method","Domain","URL","Ok","Status","Text","Type"]},getLogHeaderIndex:function getLogHeaderIndex(){return{timestamp:0,http:1,method:2,domain:3,url:4,ok:5,status:6,text:7,type:8}},enableLogger:function enableLogger(a){return fetchJson.logger="function"==typeof a?a:!1===a?null:console.log,fetchJson.logger}};"object"===("undefined"==typeof module?"undefined":_typeof(module))&&(module.exports=fetchJson),"object"===("undefined"==typeof window?"undefined":_typeof(window))&&(window.fetchJson=fetchJson);
